---
- name: Check for specific TLS cert file
  when: zend_tls_cert_path | bool
  stat:
    path: "{{ zend_tls_cert_path }}"
  register: tls_cert_file_reg

- name: Check for specific TLS key file
  when: zend_tls_key_path | bool
  stat:
    path: "{{ zend_tls_key_path }}"
  register: tls_key_file_reg

- name: Check for TLS cert file in zend_tls_cert_dir, if necessary
  when:
    - tls_cert_file_reg is not skipped
    - not tls_cert_file_reg.stat.exists
  stat:
    path: "{{ zend_tls_cert_dir }}/cert.pem"
  register: tls_cert_file_reg

- name: Check for TLS key file in zend_tls_cert_dir, if necessary
  when:
    - tls_key_file_reg is not skipped
    - not tls_key_file_reg.stat.exists
  stat:
    path: "{{ zend_tls_cert_dir }}/privkey.pem"
  register: tls_key_file_reg

- name: TLS files exist
  when:
    - tls_cert_file_reg is not skipped
    - tls_key_file_reg is not skipped
    - tls_cert_file_reg.stat.exists
    - tls_key_file_reg.stat.exists
  block:
  - name: Set TLS cert and key file facts
    set_fact:
      zend_tls_cert_abspath: "{{ tls_cert_file_reg.stat.lnk_source | d(tls_cert_file_reg.stat.path) }}"
      zend_tls_key_abspath: "{{ tls_key_file_reg.stat.lnk_source | d(tls_key_file_reg.stat.path) }}"

  - name: Assert that cert and key files live in same directory
    assert:
      that: zend_tls_cert_abspath | dirname == zend_tls_key_abspath | dirname

  - name: Set cert dir group
    file:
      path: "{{ zend_tls_cert_abspath | dirname }}"
      state: directory
      recurse: yes
      group: "{{ zend_group_name }}"

  - name: Check cert file readability
    become: yes
    become_user: "{{ zend_user_name }}"
    stat:
      path: "{{ zend_tls_cert_abspath }}"
    register: tls_cert_file_reg
    failed_when: not tls_cert_file_reg.stat.readable

  - name: Check key file readability
    become: yes
    become_user: "{{ zend_user_name }}"
    stat:
      path: "{{ zend_tls_key_abspath }}"
    register: tls_key_file_reg
    failed_when: not tls_key_file_reg.stat.readable
