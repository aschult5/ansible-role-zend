- name: Check required zend variables
  assert:
    that:
      - zennode_user_home is defined
      - zennode_user_name is defined
      - zennode_zen_dir is defined
      - zennode_zend_svc_name is defined
    msg: Required variable missing.


# Setup directory
- import_tasks: zen_dir.yml
  when: zennode_skip_zendir == false

# Install dependencies
- name: apt update
  apt:
    update_cache: yes
- name: Install apt-transport-https
  apt: name=apt-transport-https
- name: Install wget
  apt: name=wget

# Install zen
- name: Zen package repo key
  block:
    - name: zen repo key (sks-keyservers)
      apt_key:
        keyserver: ha.pool.sks-keyservers.net
        id: 219F55740BBF7A1CE368BA45FB7053CE4991B669
  rescue:
    - name: zen repo key (ubuntu)
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 219F55740BBF7A1CE368BA45FB7053CE4991B669
- name: Setup zencash repository
  apt_repository:
    repo: "deb https://zencashofficial.github.io/repo/ {{ ansible_lsb.codename }} main"
- name: Install zen to latest
  apt:
    name: zen
    state: latest
  register: apt_zen

- name: Check for zen-fetch-params effect
  stat:
    path: "{{ zennode_user_home }}/.zcash-params"
  register: zcash_params

- name: zen update block
  block:
    - name: zen-fetch-params
      command: zen-fetch-params
      register: result
      until: result is success
      retries: 5
      delay: 10
      become: yes
      become_user: "{{ zennode_user_name }}"

    - name: Stop zend
      service:
        name: "{{ zennode_zend_svc_name }}.service"
        state: stopped
      ignore_errors: yes
  when: apt_zen.changed or not zcash_params.stat.exists

- name: Zend Service
  block:
    - name: Create zend service file
      copy:
        dest: "/lib/systemd/system/{{ zennode_zend_svc_name }}.service"
        owner: root
        content: |
          [Unit]
          Description=ZenCash daemon

          [Service]
          User={{ zennode_user_name }}
          Type=forking
          ExecStart=/usr/bin/zend -daemon -pid={{ zennode_zen_dir }}/zend.pid
          PIDFile={{ zennode_zen_dir }}/zend.pid
          Restart=always
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
      register: zend_svc_file

    - name: Systemd daemon-reload
      systemd:
        daemon_reload: true
      when: zend_svc_file.changed

    # Activate zend
    - name: Start and enable zend service
      service:
        name: "{{ zennode_zend_svc_name }}.service"
        enabled: yes
        state: started
      register: zend_service

    # Restart zentracker
    - name: Restart tracker service
      service:
        name: "{{ secnode_tracker_svc_name }}.service"
        state: restarted
      when: zend_service.changed
      ignore_errors: yes
  when: zennode_skip_services == false
