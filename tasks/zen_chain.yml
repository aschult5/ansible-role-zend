- name: Check required zen_chain variables
  assert:
    that:
      - ansible_env is defined
      - zennode_user_home is defined
      - zennode_user_name is defined
      - zennode_zen_dir is defined
      - zennode_zen_chain is defined
    msg: Required variable missing.

# First try copying the blockchain from a locally available source
- name: Check for mounted blockchain seed
  stat:
    path: "{{ zen_chain_seed_path }}"
  when: zen_chain_seed_path is defined
  register: zen_chain_seed

- name: Check for mounted blockchain destination
  stat:
    path: "{{ zen_chain_dest_path }}"
  when: zen_chain_dest_path is defined
  register: zen_chain_dest

- name: Copy and link mounted blockchain
  block:
  - name: Copy blockchain
    copy:
        remote_src: yes
        # Note src trailing slash indicates to copy directory's contents
        src: "{{ zen_chain_seed_path }}/"
        dest: "{{ zen_chain_dest_path }}/"
  - name: Link blockchain blocks
    file:
      src: "{{ zen_chain_dest_path }}/blocks"
      dest: "{{ zennode_zen_dir }}/blocks"
      owner: "{{zennode_user_name }}"
      state: link
  - name: Link blockchain chainstate
    file:
      src: "{{ zen_chain_dest_path }}/chainstate"
      dest: "{{ zennode_zen_dir }}/chainstate"
      owner: "{{zennode_user_name }}"
      state: link
  when: >
    zen_chain_seed is not skipped and
    zen_chain_dest is not skipped and
    zen_chain_seed.stat.isdir is defined and zen_chain_seed.stat.isdir and
    zen_chain_dest.stat.isdir is defined and zen_chain_dest.stat.isdir

- name: Check for existing blocks
  stat:
    path: "{{ zennode_zen_dir }}/blocks"
  register: blocks

# If chain files are still not present, bootstrap
- name: Bootstrap blockchain
  block:
    - name: Install unzip
      apt: name=unzip
    - name: Install gdrive
      unarchive:
        remote_src: yes
        src: https://github.com/prasmussen/gdrive/files/879060/gdrive-linux-x64.zip
        dest: /usr/local/bin/
        creates: /usr/local/bin/gdrive
        mode: 0755

    - name: Install gdrive authentication file
      copy:
        remote_src: no
        src: files/securenode-208818-c36a8a34b2fc.json
        dest: "{{ ansible_env.HOME }}/.gdrive/"
        mode: 0600
      register: gdrive_svc_file_copy
    - set_fact: gdrive_svc_acct="{{ gdrive_svc_file_copy.dest | basename }}"

    - include_tasks: zen_chain_shard.yml
      loop: "{{ zennode_zen_chain }}"
      loop_control:
        loop_var: zen_chain_shard
  when: not blocks.stat.exists